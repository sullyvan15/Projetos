# -*- coding: utf-8 -*-
"""unsupervised.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14MvtdOz0HakkHmLTbt5YPTsWyyeuBLvd

# Aprendizado não supervisionado
A documentação necessário das ferramentas usadas podem ser vistitadas em:

- [MiniBatchKMeans](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.MiniBatchKMeans.html)
- [KMeans](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html)
"""

!wget -c https://github.com/sullyvan15/datasets/raw/master/convento_da_penha-ES.jpg -O convento_da_penha-ES.jpg

import warnings
warnings.filterwarnings('ignore')

import numpy as np
import  matplotlib.pyplot as plt
from PIL import Image

plt.figure(figsize=(20, 10))

imagem = Image.open("convento_da_penha-ES.jpg")

plt.imshow(imagem)
plt.show()

imagem = np.array(imagem)
print(imagem.shape)

"""## Normalização dos dados"""

data = imagem / 255.0
data = data.reshape(1350*1080, 3)

print(data.shape)

"""## Visualizar espaço de cores"""

def plot_pixels(data, colors=None, title=''):
    if colors is None:
        colors = data
    
    rng = np.random.RandomState(123)
    i = rng.permutation((data.shape[0]))[:10000]
    colors = colors[i]
    R, G, B = data[i].T
    
    fig, ax = plt.subplots(1,2, figsize=(16,6))
    ax[0].scatter(R, G, color=colors, marker='.')
    ax[0].set(xlabel='Red', ylabel='Green', xlim=(0,1), ylim=(0,1))
    
    ax[1].scatter(R, B, color=colors, marker='.')
    ax[1].set(xlabel='Red', ylabel='Blue', xlim=(0,1), ylim=(0,1))
    
    fig.suptitle(title, size=20)

plot_pixels(data, title='Espaço de cores (16 milhões)')

"""## Treinar algoritmo
### K-Means

"""

from sklearn.cluster import MiniBatchKMeans

clf_kmeans = MiniBatchKMeans(16)
clf_kmeans.fit(data)

"""## Predição"""

new_colors = clf_kmeans.cluster_centers_[clf_kmeans.predict(data)]

print(new_colors)
plot_pixels(data, colors=new_colors, title='Espaço de cores (16)')

"""## Avaliar modelos"""

imagem_recolorida = new_colors.reshape(imagem.shape)

fig, ax = plt.subplots(1,2, figsize=(20,10),
                       subplot_kw=dict(xticks=[], yticks=[]))

fig.subplots_adjust(wspace=0.05)
ax[0].imshow(imagem)
ax[0].set_title('Imagem Original')

ax[1].imshow(imagem_recolorida)
ax[1].set_title('Imagem com 16 cores')